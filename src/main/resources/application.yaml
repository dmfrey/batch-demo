debug: true

logging.level:
  liquibase: info
  io.micrometer.prometheus: debug
  org.springframework.batch: info
  org.springframework.cloud.task: debug
  org.springframework.jdbc: info
  com.broadcom.springconsulting.batch_demo: info

spring:
  application:
    name: batch-demo
    org: spring-consulting

  batch:
    jdbc:
      initialize-schema: never    # always

  cloud:
    task:
      name: ${spring.application.name}
      external-execution-id: ${spring.application.name}
      closecontext-enabled: true

#  threads:
#    virtual:
#      enabled: true

management:
#
#  endpoints:
#    web.exposure.include: '*'
#
#  endpoint:
#    env:
#      show-values: always
#    health:
#      show-details: ALWAYS
#      group:
#        liveness:
#          show-details: always
#        readiness:
#          show-details: always
#  info:
#    env:
#      enabled: true
#    java:
#      enabled: true
#    os:
#      enabled: true
#
#  metrics:
#    tags:
#      application: ${spring.application.name}
#      org: ${spring.application.org}
#      profiles: ${spring.profiles.active}
#
  prometheus:
    metrics:
      export:
        enabled: true
#        step: 10s
        rsocket:
          enabled: true
#        pushgateway:
#          enabled: true
#          base-url: http://prometheus-pushgateway.monitor.svc.cluster.local:9091
#          job: ${spring.application.name}
#          push-rate: 5s

#
#  tracing:
#    enabled: true
#    sampling:
#      probability: 1.0
#
#  otlp:
##    metrics:
##      export:
##        url: http://otelcol-dm-opentelemetry-collector.monitor.svc.cluster.local:4318/v1/metrics
#    tracing:
#      endpoint: http://otelcol-dm-opentelemetry-collector.monitor.svc.cluster.local:4318/v1/traces

micrometer.prometheus.rsocket:
  host: spring-cloud-dataflow-prometheus-proxy.dataflow.svc.cluster.local  #required
  port: 7001
  max-retries: 10000 # default is Long.MAX_VALUE
  first-backoff: 10s
  max-backoff: 10m